// <auto-generated />
using System;
using ABI.API.Structure.ACL.Truck.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ABI.API.Structure.ACL.Truck.Migrations
{
    [DbContext(typeof(TruckACLContext))]
    [Migration("20210322143445_change_importProcess2")]
    partial class change_importProcess2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ABI.API.Structure.ACL.Truck.Domain.Entities.BusinessTruckPortal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("modelo_estructura_empresa_truck_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusinessCode")
                        .IsRequired()
                        .HasColumnName("modelo_estructura_empresa_truck_codigo")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("modelo_estructura_empresa_truck_nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("StructureModelId")
                        .HasColumnName("modelo_estructurta_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Modelo_Estructura_Empresa_Truck","acl");
                });

            modelBuilder.Entity("ABI.API.Structure.ACL.Truck.Domain.Entities.EstructuraClienteTerritorioIO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("estruct_territorio_io_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CliId")
                        .HasColumnName("estruct_territorio_io_CliId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CliNom")
                        .HasColumnName("estruct_territorio_io_CliNom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CliSts")
                        .HasColumnName("estruct_territorio_io_CliSts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CliTrrId")
                        .HasColumnName("estruct_territorio_io_CliTrrId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpId")
                        .HasColumnName("estruct_territorio_io_EmpId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GerenciaID")
                        .HasColumnName("estruct_territorio_io_GerenciaID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImportProcessId")
                        .HasColumnName("estruct_territorio_io_proceso_id")
                        .HasColumnType("int");

                    b.Property<string>("Pais_Desc")
                        .HasColumnName("estruct_territorio_io_pais_desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais_ID")
                        .HasColumnName("estruct_territorio_io_pais_id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("estruct_territorio_io","acl");
                });

            modelBuilder.Entity("ABI.API.Structure.ACL.Truck.Domain.Entities.ImpactStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("impacto_estado_Id")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("impacto_estado_codigo")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("impacto_estado_nombre")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Impacto_Estado","acl");
                });

            modelBuilder.Entity("ABI.API.Structure.ACL.Truck.Domain.Entities.ImportProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("proceso_importacion_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("proceso_importacion_sociedad_id")
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("01CL");

                    b.Property<string>("Condition")
                        .HasColumnName("proceso_importacion_condicion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnName("proceso_importacion_id_usuario_alta")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnName("proceso_importacion_nombre_usuario_alta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("proceso_importacion_fecha_alta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnName("proceso_importacion_fecha_fin_ejecucion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("From")
                        .HasColumnName("proceso_importacion_desde")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("proceso_importacion_eliminado")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("proceso_importacion_id_usuario_ultima_modificacion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastModifiedByName")
                        .HasColumnName("proceso_importacion_nombre_usuario_ultima_modificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnName("proceso_importacion_fecha_ultima_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Periodicity")
                        .HasColumnName("proceso_importacion_periodicidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProcessDate")
                        .HasColumnName("proceso_importacion_fecha_proceso")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcessState")
                        .HasColumnName("proceso_importacion_estado")
                        .HasColumnType("int");

                    b.Property<int?>("ProcessedRows")
                        .HasColumnName("proceso_importacion_cantidad_registros_procesados")
                        .HasColumnType("int");

                    b.Property<int>("Source")
                        .HasColumnName("proceso_importacion_origen")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnName("proceso_importacion_fecha_inicio_ejecucion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("To")
                        .HasColumnName("proceso_importacion_hasta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("proceso_importacion","acl");
                });

            modelBuilder.Entity("ABI.API.Structure.ACL.Truck.Domain.Entities.LevelTruckPortal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nivel_truck_portal_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LevelPortalId")
                        .HasColumnName("nivel_id")
                        .HasColumnType("int");

                    b.Property<string>("LevelPortalName")
                        .IsRequired()
                        .HasColumnName("nivel_nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("LevelTruck")
                        .HasColumnName("nivel_truck_portal_nivel_truck")
                        .HasColumnType("int");

                    b.Property<string>("LevelTruckName")
                        .IsRequired()
                        .HasColumnName("nivel_truck_portal_nombre_truck")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("RolPortalId")
                        .HasColumnName("rol_id")
                        .HasColumnType("int");

                    b.Property<string>("TypeEmployeeTruck")
                        .IsRequired()
                        .HasColumnName("nivel_truck_portal_tipo_Empleado")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Nivel_Truck_Portal","acl");
                });

            modelBuilder.Entity("ABI.API.Structure.ACL.Truck.Domain.Entities.LogImpactTruck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("log_impacto_truck_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnName("log_impacto_truck_fecha_hora")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StructureId")
                        .HasColumnName("estructura_id")
                        .HasColumnType("int");

                    b.Property<string>("TruckVersion")
                        .IsRequired()
                        .HasColumnName("log_impacto_truck_version_truck")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Log_Impacto_Truck","acl");
                });

            modelBuilder.Entity("ABI.API.Structure.ACL.Truck.Domain.Entities.LogImpactTruckArista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("log_impacto_truck_arista_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AristaId")
                        .HasColumnName("arista_Id")
                        .HasColumnType("int");

                    b.Property<int>("LogImpactTruckId")
                        .HasColumnName("log_impacto_truck_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LogImpactTruckId");

                    b.ToTable("Log_Impacto_Truck_Aristas","acl");
                });

            modelBuilder.Entity("ABI.API.Structure.ACL.Truck.Domain.Entities.LogImpactTruckNode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("log_impacto_truck_nodo_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LogImpactTruckId")
                        .HasColumnName("log_impacto_truck_id")
                        .HasColumnType("int");

                    b.Property<int>("NodeDefinitionId")
                        .HasColumnName("nodo_definicion_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LogImpactTruckId");

                    b.ToTable("Log_Impacto_Truck_Nodos","acl");
                });

            modelBuilder.Entity("ABI.API.Structure.ACL.Truck.Domain.Entities.LogImpactTruckStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("log_Impacto_truck_Estado_Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnName("log_impacto_truck_fecha_hora")
                        .HasColumnType("datetime2");

                    b.Property<int>("LogImpactTruckId")
                        .HasColumnName("log_impacto_truck_id")
                        .HasColumnType("int");

                    b.Property<string>("LogTruck")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnName("log_impacto_truck_estado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LogImpactTruckId");

                    b.HasIndex("StatusId");

                    b.ToTable("Log_Impacto_Truck_Estado","acl");
                });

            modelBuilder.Entity("ABI.API.Structure.ACL.Truck.Domain.Entities.LogImpactTruckTrays", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("log_impacto_truck_bandeja_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LogImpactTruckId")
                        .HasColumnName("log_impacto_truck_id")
                        .HasColumnType("int");

                    b.Property<string>("TruckTrays")
                        .HasColumnName("log_impacto_truck_bandejas")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LogImpactTruckId");

                    b.ToTable("Log_Impacto_Truck_Bandejas","acl");
                });

            modelBuilder.Entity("ABI.API.Structure.ACL.Truck.Domain.Entities.PeriodicityDays", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("dias_periodicidad_id")
                        .HasColumnType("int");

                    b.Property<int>("DaysCount")
                        .HasColumnName("dias_periodicidad_cantidad_dias")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("dias_periodicidad","acl");
                });

            modelBuilder.Entity("ABI.API.Structure.ACL.Truck.Domain.Entities.TypeVendorTruck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tipo_vendedor_truck_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttentionModeRoleId")
                        .HasColumnName("modo_atencion_rol_id")
                        .HasColumnType("int");

                    b.Property<int?>("VendorTruckId")
                        .HasColumnName("vendedor_truck_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tipo_Vendedor_Truck","acl");
                });

            modelBuilder.Entity("ABI.API.Structure.ACL.Truck.Domain.Entities.TypeVendorTruckPortal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tipo_vendedor_truck_portal_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttentionModeId")
                        .HasColumnName("modo_atencion_id")
                        .HasColumnType("int");

                    b.Property<bool?>("MappingTruckReading")
                        .HasColumnName("mapeo_truck_lectura")
                        .HasColumnType("bit");

                    b.Property<bool?>("MappingTruckWriting")
                        .HasColumnName("mapeo_truck_escritura")
                        .HasColumnType("bit");

                    b.Property<int?>("RoleId")
                        .HasColumnName("rol_id")
                        .HasColumnType("int");

                    b.Property<int>("VendorTruckId")
                        .HasColumnName("vendedor_truck_id")
                        .HasColumnType("int");

                    b.Property<string>("VendorTruckName")
                        .IsRequired()
                        .HasColumnName("vendedor_truck_Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Tipo_Vendedor_Truck_Portal","acl");
                });

            modelBuilder.Entity("ABI.API.Structure.ACL.Truck.Domain.Entities.LogImpactTruckArista", b =>
                {
                    b.HasOne("ABI.API.Structure.ACL.Truck.Domain.Entities.LogImpactTruck", "LogImpactTruck")
                        .WithMany("LogsImpactTruckArista")
                        .HasForeignKey("LogImpactTruckId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ABI.API.Structure.ACL.Truck.Domain.Entities.LogImpactTruckNode", b =>
                {
                    b.HasOne("ABI.API.Structure.ACL.Truck.Domain.Entities.LogImpactTruck", "LogImpactTruck")
                        .WithMany("LogsImpactTruckNode")
                        .HasForeignKey("LogImpactTruckId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ABI.API.Structure.ACL.Truck.Domain.Entities.LogImpactTruckStatus", b =>
                {
                    b.HasOne("ABI.API.Structure.ACL.Truck.Domain.Entities.LogImpactTruck", "LogImpactTruck")
                        .WithMany("LogsImpactTruckStatus")
                        .HasForeignKey("LogImpactTruckId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ABI.API.Structure.ACL.Truck.Domain.Entities.ImpactStatus", "Status")
                        .WithMany("LogsImpactTruckStatus")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ABI.API.Structure.ACL.Truck.Domain.Entities.LogImpactTruckTrays", b =>
                {
                    b.HasOne("ABI.API.Structure.ACL.Truck.Domain.Entities.LogImpactTruck", "LogImpactTruck")
                        .WithMany("LogsImpactTruckTrays")
                        .HasForeignKey("LogImpactTruckId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
